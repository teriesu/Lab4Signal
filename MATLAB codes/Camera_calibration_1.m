imageFileNames = {'B:\Documents\Trabajos\Expedientes semestrales\2021-1\Se√±ales\Fifth Laboratory\Images\im_1\cali1.png',...
    'Images\im_1\cali2.png',...
    'Images\im_1\cali3.png',...
    'Images\im_1\cali4.png',...
    'Images\im_1\cali5.png',...
    'Images\im_1\cali6.png',...
    'Images\im_1\cali7.png',...
    'Images\im_1\cali8.png',...
    'Images\im_1\cali9.png',...
    'Images\im_1\cali10.png',...
    'Images\im_1\cali11.png',...
    }; %Pay attention to change the file directory!!

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

